name: Create Github release

on: push

env:
  PACKAGE_NAME: utils
  NEXT_TAG: "0.4.0"

jobs:
  create-github-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Fetching the latest release tag and build the next release tag 
        id: get-tags
        uses: actions/github-script@v7
        with:
          result-encoding: json
          script: |
            const { PACKAGE_NAME, NEXT_TAG } = process.env
            const { data: releases } = await github.rest.repos.listReleases({
              ...context.repo
            })
            const targetReleases = releases.filter(({ tag_name }) => tag_name.startsWith(PACKAGE_NAME))
            const { tag_name: previousReleaseTag } = targetReleases[0]
            console.log("Previous release:", previousReleaseTag)

            // Build a tag for next release
            const nextReleaseTag = `${PACKAGE_NAME}/${NEXT_TAG}`
            console.log("Next release:", nextReleaseTag)

            return {
              previous: previousReleaseTag,
              next: nextReleaseTag
            } 

      - name: Dump result
        run: echo "${{ steps.get-tags.outputs.result }}"

      - name: Generate a release note
        uses: yuk1ty/conventional-release-note@v1.1.1
        with:
          kind: default
          previous-tag: ${{ steps.get-tags.outputs.result.previous }}
          current-tag: ${{ steps.get-tags.outputs.result.next }}
          scopes: |
            ${{ env.PACKAGE_NAME }}
          include-non-scoped: false
